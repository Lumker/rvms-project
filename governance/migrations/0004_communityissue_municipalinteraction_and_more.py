# Generated by Django 4.2.10 on 2025-05-23 14:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('governance', '0003_wardcommittee_traditionalcouncil_ward_committee_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issue_number', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('infrastructure', 'Infrastructure'), ('service_delivery', 'Service Delivery'), ('safety_security', 'Safety & Security'), ('health', 'Health Services'), ('education', 'Education'), ('environment', 'Environment'), ('economic', 'Economic Development'), ('social', 'Social Issues'), ('governance', 'Governance')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('reported_by', models.CharField(help_text='Name of person reporting', max_length=100)),
                ('reported_date', models.DateTimeField(auto_now_add=True)),
                ('location_description', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('reported', 'Reported'), ('acknowledged', 'Acknowledged'), ('investigating', 'Under Investigation'), ('escalated', 'Escalated to Municipality'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('requires_budget', 'Requires Budget Allocation')], default='reported', max_length=20)),
                ('escalated_to_municipality', models.BooleanField(default=False)),
                ('escalation_date', models.DateTimeField(blank=True, null=True)),
                ('municipal_reference', models.CharField(blank=True, max_length=50)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('resolution_description', models.TextField(blank=True)),
                ('resolution_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('community_satisfied', models.BooleanField(blank=True, null=True)),
                ('satisfaction_notes', models.TextField(blank=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_issues', to=settings.AUTH_USER_MODEL)),
                ('ward_committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_issues', to='governance.wardcommittee')),
            ],
            options={
                'ordering': ['-reported_date'],
            },
        ),
        migrations.CreateModel(
            name='MunicipalInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interaction_type', models.CharField(choices=[('meeting', 'Official Meeting'), ('submission', 'Document Submission'), ('request', 'Service Request'), ('complaint', 'Formal Complaint'), ('proposal', 'Development Proposal'), ('budget_input', 'Budget Input'), ('feedback', 'Feedback Session'), ('joint_project', 'Joint Project')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date_initiated', models.DateTimeField(auto_now_add=True)),
                ('date_scheduled', models.DateTimeField(blank=True, null=True)),
                ('date_completed', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('scheduled', 'Scheduled'), ('completed', 'Completed'), ('pending_response', 'Pending Municipal Response'), ('follow_up_needed', 'Follow-up Needed'), ('closed', 'Closed')], default='initiated', max_length=20)),
                ('outcomes', models.TextField(blank=True)),
                ('municipal_commitments', models.TextField(blank=True)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('municipal_officials', models.ManyToManyField(related_name='ward_interactions', to=settings.AUTH_USER_MODEL)),
                ('related_issues', models.ManyToManyField(blank=True, to='governance.communityissue')),
                ('ward_committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipal_interactions', to='governance.wardcommittee')),
                ('ward_committee_representatives', models.ManyToManyField(related_name='municipal_interactions', to='governance.wardcommitteemember')),
            ],
            options={
                'ordering': ['-date_initiated'],
            },
        ),
        migrations.CreateModel(
            name='CommunityEngagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('engagement_type', models.CharField(choices=[('meeting', 'Community Meeting'), ('consultation', 'Public Consultation'), ('survey', 'Community Survey'), ('petition', 'Community Petition'), ('complaint', 'Community Complaint'), ('project_visit', 'Project Site Visit'), ('awareness', 'Awareness Campaign'), ('feedback', 'Municipal Feedback Session')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date_scheduled', models.DateTimeField()),
                ('date_completed', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(max_length=255)),
                ('expected_attendance', models.PositiveIntegerField(default=0)),
                ('actual_attendance', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('follow_up_needed', 'Follow-up Needed')], default='planned', max_length=20)),
                ('outcomes', models.TextField(blank=True, help_text='Key outcomes and decisions')),
                ('follow_up_actions', models.TextField(blank=True)),
                ('satisfaction_rating', models.DecimalField(blank=True, decimal_places=2, help_text='Average satisfaction rating (1-5)', max_digits=3, null=True)),
                ('municipal_officials_present', models.ManyToManyField(blank=True, related_name='attended_engagements', to=settings.AUTH_USER_MODEL)),
                ('ward_committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagements', to='governance.wardcommittee')),
            ],
            options={
                'ordering': ['-date_scheduled'],
            },
        ),
        migrations.CreateModel(
            name='CommitteePerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reporting_period_start', models.DateField()),
                ('reporting_period_end', models.DateField()),
                ('community_meetings_held', models.PositiveIntegerField(default=0)),
                ('total_community_attendance', models.PositiveIntegerField(default=0)),
                ('issues_reported', models.PositiveIntegerField(default=0)),
                ('issues_resolved', models.PositiveIntegerField(default=0)),
                ('municipal_meetings_attended', models.PositiveIntegerField(default=0)),
                ('submissions_to_municipality', models.PositiveIntegerField(default=0)),
                ('municipal_responses_received', models.PositiveIntegerField(default=0)),
                ('development_projects_supported', models.PositiveIntegerField(default=0)),
                ('community_projects_initiated', models.PositiveIntegerField(default=0)),
                ('community_satisfaction_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('municipal_collaboration_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('bridge_effectiveness_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('ward_committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='governance.wardcommittee')),
            ],
            options={
                'ordering': ['-reporting_period_end'],
                'unique_together': {('ward_committee', 'reporting_period_start', 'reporting_period_end')},
            },
        ),
    ]
